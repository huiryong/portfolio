{"ast":null,"code":"var _jsxFileName = \"/Users/kouhuiryong/Documents/portforio/src/pages/pokemon/src/componenets/Card/Card.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./Card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  pokemon\n}) => {\n  _s();\n  const [pokemonName, setPokemonName] = useState([]);\n  const [pokemonType, setPokemonType] = useState(\"\");\n  const [pokemonAbility, setPokemonAbility] = useState(\"\");\n  let pokemonNameDetail = pokemon.species.url;\n  const loadPokemonName = async data => {\n    let response = await fetch(data);\n    let result = await response.json();\n    let jaName = result.names.find(name => name.language.name === \"ja\").name;\n    setPokemonName(jaName);\n  };\n  let resPokemonTypes = pokemon.types.map(v => {\n    let typesURL = v.type.url;\n    return typesURL;\n  });\n  const fetchJapaneseTypeName = async url => {\n    let response = await fetch(url);\n    let typeData = await response.json();\n    if (typeData.names && typeData.names.length > 0) {\n      let jaTypeName = typeData.names.find(name => name.language.name === \"ja\");\n      return jaTypeName ? jaTypeName.name : typeData.name;\n    } else {\n      return typeData.name;\n    }\n  };\n  const loadPokemonType = async data => {\n    let _pokemonType = await Promise.all(data.map(fetchJapaneseTypeName));\n    let joinedTypes = _pokemonType.join(\" / \");\n    setPokemonType(joinedTypes);\n  };\n  let resPokemonAbility = pokemon.abilities.map(v => {\n    let abilityURL = v.ability.url;\n    return abilityURL;\n  });\n  const fetchJapaneseAbility = async url => {\n    let response = await fetch(url);\n    let abilityData = await response.json();\n    if (abilityData.names && abilityData.names.length > 0) {\n      let jaAbilityName = abilityData.names.find(name => name.language.name === \"ja\");\n      return jaAbilityName ? jaAbilityName.name : abilityData.name;\n    } else {\n      return abilityData.name;\n    }\n  };\n  const loadPokemonAbility = async data => {\n    let _pokemonAbility = await Promise.all(data.map(fetchJapaneseAbility));\n    let joinedAbility = _pokemonAbility.join(\" / \");\n    setPokemonAbility(joinedAbility);\n  };\n  useEffect(() => {\n    loadPokemonType(resPokemonTypes);\n    loadPokemonName(pokemonNameDetail);\n    loadPokemonAbility(resPokemonAbility);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardImg\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pokemon.sprites.front_default,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"cardName\",\n      children: pokemonName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardType\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u30BF\\u30A4\\u30D7:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"typeName\",\n          children: pokemonType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardData\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: [\"\\u91CD\\u3055\\uFF1A\", pokemon.weight]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardData\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: [\"\\u9AD8\\u3055\\uFF1A\", pokemon.height]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardData\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: [\"\\u30A2\\u30D3\\u30EA\\u30C6\\u30A3\\uFF1A\", pokemonAbility]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Card, \"rSFwl1xu80giiAdXIrbyVZsrySI=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Card","pokemon","_s","pokemonName","setPokemonName","pokemonType","setPokemonType","pokemonAbility","setPokemonAbility","pokemonNameDetail","species","url","loadPokemonName","data","response","fetch","result","json","jaName","names","find","name","language","resPokemonTypes","types","map","v","typesURL","type","fetchJapaneseTypeName","typeData","length","jaTypeName","loadPokemonType","_pokemonType","Promise","all","joinedTypes","join","resPokemonAbility","abilities","abilityURL","ability","fetchJapaneseAbility","abilityData","jaAbilityName","loadPokemonAbility","_pokemonAbility","joinedAbility","className","children","src","sprites","front_default","alt","fileName","_jsxFileName","lineNumber","columnNumber","weight","height","_c","$RefreshReg$"],"sources":["/Users/kouhuiryong/Documents/portforio/src/pages/pokemon/src/componenets/Card/Card.js"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"./Card.css\";\n\nconst Card = ({ pokemon }) => {\n  const [pokemonName, setPokemonName] = useState([]);\n  const [pokemonType, setPokemonType] = useState(\"\");\n  const [pokemonAbility, setPokemonAbility] = useState(\"\");\n\n  let pokemonNameDetail = pokemon.species.url;\n  const loadPokemonName = async (data) => {\n    let response = await fetch(data);\n    let result = await response.json();\n    let jaName = result.names.find((name) => name.language.name === \"ja\").name;\n    setPokemonName(jaName);\n  };\n\n  let resPokemonTypes = pokemon.types.map((v) => {\n    let typesURL = v.type.url;\n    return typesURL;\n  });\n\n  const fetchJapaneseTypeName = async (url) => {\n    let response = await fetch(url);\n    let typeData = await response.json();\n\n    if (typeData.names && typeData.names.length > 0) {\n      let jaTypeName = typeData.names.find(\n        (name) => name.language.name === \"ja\"\n      );\n      return jaTypeName ? jaTypeName.name : typeData.name;\n    } else {\n      return typeData.name;\n    }\n  };\n\n  const loadPokemonType = async (data) => {\n    let _pokemonType = await Promise.all(data.map(fetchJapaneseTypeName));\n    let joinedTypes = _pokemonType.join(\" / \");\n    setPokemonType(joinedTypes);\n  };\n\n  let resPokemonAbility = pokemon.abilities.map((v) => {\n    let abilityURL = v.ability.url;\n    return abilityURL;\n  });\n\n  const fetchJapaneseAbility = async (url) => {\n    let response = await fetch(url);\n    let abilityData = await response.json();\n\n    if (abilityData.names && abilityData.names.length > 0) {\n      let jaAbilityName = abilityData.names.find(\n        (name) => name.language.name === \"ja\"\n      );\n      return jaAbilityName ? jaAbilityName.name : abilityData.name;\n    } else {\n      return abilityData.name;\n    }\n  };\n\n  const loadPokemonAbility = async (data) => {\n    let _pokemonAbility = await Promise.all(data.map(fetchJapaneseAbility));\n    let joinedAbility = _pokemonAbility.join(\" / \");\n    setPokemonAbility(joinedAbility);\n  };\n\n  useEffect(() => {\n    loadPokemonType(resPokemonTypes);\n    loadPokemonName(pokemonNameDetail);\n    loadPokemonAbility(resPokemonAbility);\n  }, []);\n\n  return (\n    <div className=\"card\">\n      <div className=\"cardImg\">\n        <img src={pokemon.sprites.front_default} alt=\"\" />\n      </div>\n      <h3 className=\"cardName\">{pokemonName}</h3>\n      <div className=\"cardType\">\n        <div>\n          タイプ:\n          <span className=\"typeName\">{pokemonType}</span>\n        </div>\n      </div>\n      <div className=\"cardInfo\">\n        <div className=\"cardData\">\n          <p className=\"title\">重さ：{pokemon.weight}</p>\n        </div>\n        <div className=\"cardData\">\n          <p className=\"title\">高さ：{pokemon.height}</p>\n        </div>\n        <div className=\"cardData\">\n          <p className=\"title\">アビリティ：{pokemonAbility}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExD,IAAIa,iBAAiB,GAAGR,OAAO,CAACS,OAAO,CAACC,GAAG;EAC3C,MAAMC,eAAe,GAAG,MAAOC,IAAI,IAAK;IACtC,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACF,IAAI,CAAC;IAChC,IAAIG,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClC,IAAIC,MAAM,GAAGF,MAAM,CAACG,KAAK,CAACC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAACD,IAAI,KAAK,IAAI,CAAC,CAACA,IAAI;IAC1EjB,cAAc,CAACc,MAAM,CAAC;EACxB,CAAC;EAED,IAAIK,eAAe,GAAGtB,OAAO,CAACuB,KAAK,CAACC,GAAG,CAAEC,CAAC,IAAK;IAC7C,IAAIC,QAAQ,GAAGD,CAAC,CAACE,IAAI,CAACjB,GAAG;IACzB,OAAOgB,QAAQ;EACjB,CAAC,CAAC;EAEF,MAAME,qBAAqB,GAAG,MAAOlB,GAAG,IAAK;IAC3C,IAAIG,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAAC;IAC/B,IAAImB,QAAQ,GAAG,MAAMhB,QAAQ,CAACG,IAAI,CAAC,CAAC;IAEpC,IAAIa,QAAQ,CAACX,KAAK,IAAIW,QAAQ,CAACX,KAAK,CAACY,MAAM,GAAG,CAAC,EAAE;MAC/C,IAAIC,UAAU,GAAGF,QAAQ,CAACX,KAAK,CAACC,IAAI,CACjCC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAACD,IAAI,KAAK,IACnC,CAAC;MACD,OAAOW,UAAU,GAAGA,UAAU,CAACX,IAAI,GAAGS,QAAQ,CAACT,IAAI;IACrD,CAAC,MAAM;MACL,OAAOS,QAAQ,CAACT,IAAI;IACtB;EACF,CAAC;EAED,MAAMY,eAAe,GAAG,MAAOpB,IAAI,IAAK;IACtC,IAAIqB,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACvB,IAAI,CAACY,GAAG,CAACI,qBAAqB,CAAC,CAAC;IACrE,IAAIQ,WAAW,GAAGH,YAAY,CAACI,IAAI,CAAC,KAAK,CAAC;IAC1ChC,cAAc,CAAC+B,WAAW,CAAC;EAC7B,CAAC;EAED,IAAIE,iBAAiB,GAAGtC,OAAO,CAACuC,SAAS,CAACf,GAAG,CAAEC,CAAC,IAAK;IACnD,IAAIe,UAAU,GAAGf,CAAC,CAACgB,OAAO,CAAC/B,GAAG;IAC9B,OAAO8B,UAAU;EACnB,CAAC,CAAC;EAEF,MAAME,oBAAoB,GAAG,MAAOhC,GAAG,IAAK;IAC1C,IAAIG,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAAC;IAC/B,IAAIiC,WAAW,GAAG,MAAM9B,QAAQ,CAACG,IAAI,CAAC,CAAC;IAEvC,IAAI2B,WAAW,CAACzB,KAAK,IAAIyB,WAAW,CAACzB,KAAK,CAACY,MAAM,GAAG,CAAC,EAAE;MACrD,IAAIc,aAAa,GAAGD,WAAW,CAACzB,KAAK,CAACC,IAAI,CACvCC,IAAI,IAAKA,IAAI,CAACC,QAAQ,CAACD,IAAI,KAAK,IACnC,CAAC;MACD,OAAOwB,aAAa,GAAGA,aAAa,CAACxB,IAAI,GAAGuB,WAAW,CAACvB,IAAI;IAC9D,CAAC,MAAM;MACL,OAAOuB,WAAW,CAACvB,IAAI;IACzB;EACF,CAAC;EAED,MAAMyB,kBAAkB,GAAG,MAAOjC,IAAI,IAAK;IACzC,IAAIkC,eAAe,GAAG,MAAMZ,OAAO,CAACC,GAAG,CAACvB,IAAI,CAACY,GAAG,CAACkB,oBAAoB,CAAC,CAAC;IACvE,IAAIK,aAAa,GAAGD,eAAe,CAACT,IAAI,CAAC,KAAK,CAAC;IAC/C9B,iBAAiB,CAACwC,aAAa,CAAC;EAClC,CAAC;EAEDnD,SAAS,CAAC,MAAM;IACdoC,eAAe,CAACV,eAAe,CAAC;IAChCX,eAAe,CAACH,iBAAiB,CAAC;IAClCqC,kBAAkB,CAACP,iBAAiB,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExC,OAAA;IAAKkD,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBnD,OAAA;MAAKkD,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBnD,OAAA;QAAKoD,GAAG,EAAElD,OAAO,CAACmD,OAAO,CAACC,aAAc;QAACC,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACN3D,OAAA;MAAIkD,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAE/C;IAAW;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3C3D,OAAA;MAAKkD,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvBnD,OAAA;QAAAmD,QAAA,GAAK,qBAEH,eAAAnD,OAAA;UAAMkD,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAE7C;QAAW;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN3D,OAAA;MAAKkD,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBnD,OAAA;QAAKkD,SAAS,EAAC,UAAU;QAAAC,QAAA,eACvBnD,OAAA;UAAGkD,SAAS,EAAC,OAAO;UAAAC,QAAA,GAAC,oBAAG,EAACjD,OAAO,CAAC0D,MAAM;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACN3D,OAAA;QAAKkD,SAAS,EAAC,UAAU;QAAAC,QAAA,eACvBnD,OAAA;UAAGkD,SAAS,EAAC,OAAO;UAAAC,QAAA,GAAC,oBAAG,EAACjD,OAAO,CAAC2D,MAAM;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACN3D,OAAA;QAAKkD,SAAS,EAAC,UAAU;QAAAC,QAAA,eACvBnD,OAAA;UAAGkD,SAAS,EAAC,OAAO;UAAAC,QAAA,GAAC,sCAAM,EAAC3C,cAAc;QAAA;UAAAgD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxD,EAAA,CA9FIF,IAAI;AAAA6D,EAAA,GAAJ7D,IAAI;AAgGV,eAAeA,IAAI;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}